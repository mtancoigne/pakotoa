- content_for(:title) { t(".title", name: @authority.name) }

- if !@authority.committed
  .panel.panel-primary
    .panel-heading
      .panel-title
        = t(".creating_ca_title")
    .panel-body
      %ol
        %li
          %p Decide which <em>attributes</em> the Certification Authority issued certificates' subject will have to contain and define a corresponding <em>policy</em>;
          %p= link_to t('.attributes'), authority_subject_attributes_path(@authority), class: "btn btn-default"
        %li
          %p
            Generate OpenSSL
            = link_to "ca", openssl_ca_authority_path(@authority, format: :text)
            and
            = link_to "req", openssl_req_authority_path(@authority, format: :text)
            configuration snippets and integrate them into <code>config/ssl/openssl.cnf</code>;
        %li
          %p Create the new Certification Authority and sign it using the Root Certification Authority;
          %pre= "$ ./bin/ca-setup #{@authority.id}.#{@authority.basename}"
        %li
          %p
            Double-check your settings and
            =link_to t('.commit'), commit_authority_path(@authority), class: "btn btn-success", method: :put
          %p The application will check that the certificate is in place and usable.


.panel.panel-default
  .panel-heading
    .panel-title
      = t(".managers")
      = link_to content_tag(:i, "", class: "fa fa-edit") + " " + t(".users"), authority_users_path(@authority), class: "btn btn-link btn-xs pull-right"
      .badge= @authority.users.count
  .panel-body
    - @authority.users.each do |user|
      - if user == current_user
        .label.label-primary= user.email
      - else
        .label.label-default= user.email

= link_to t('.edit'), edit_authority_path(@authority), class: "btn btn-default"  if can? :edit, @authority

- if @authority.committed?
  = link_to t(".manage_certificates"), authority_certificates_path(@authority), class: "btn btn-warning"
